[Template AAUnitRUSVehicleHeavyTankBase Template=AAUnitRUSVehicleHeavyTank]
{
	name = "#rus_tank_heavy_name"
	editor_name = "#rus_tank_heavy_editor_name"

	hide_if_missing_properties = false

	[BodyComponent]
	{
		health = 600
		defense = 10
	}

	[MoverComponent]
	{
		speed_max = 3
		acceleration = 1.25
		[WhenStartMoving template=FXC_CreateVFX]
		{
			VFX_IDS = start_exhaust_01
			location = exhaust_point_01	
	  	}
	  	
	  	[WhenStartMoving template=FXC_CreateVFX]
		{
			VFX_IDS = start_exhaust_01
			location = exhaust_point_02	
	  	}
	}

	[ElementComponent]
	{
                morale_value = 25
                
		required_properties = tech_heavy_tank
	}
		
	[PropertiesComponent]
	{
		[Property]
		property_IDS = front

        [Property]
		property_IDS = support
		
		[Property]
		property_IDS = combat_unit

		[Property]
		property_IDS = armor_plating_medium
	}
	
	[PerformerComponent]
	{


		[Ability template=AATurretAttackLocal]
		{
			
			[AbilityDefinition Template=AAMediumTankGun]
			{				
				name = "#rus_tank_heavy_AbilityDefinition_name"
				recharge_time = 6
				area = 3.5
				range = 30
				max_targets = 4

				[Effect Template=APDamageEffect]
				amount = 80

				[Effect Template=AddDamageEffect]
				damage_type_IDS = flame
				targets = building
				amount = 50

				[Effect Template=MoraleGainEffect]
				targets = self
				amount = 1

				[WhenDo Template=FXC_PlayObjectAnimation]
				object_animation_IDS = Recoil1

				[WhenDo template=FXC_PlaySFX]
				audio_ids = rus_cannon_heavy
			
			}
		}
	}

	[View]
	{
		resource_prefix = RUSTankHeavy/RUSTankHeavy
		
		[AspectNormal]
		{						
			[Animation Template=ObjectAnimationCustomPlay]
			ids = Recoil1
			length = 1
			kf = RUSTankHeavy/RUSTankHeavyRecoil1.kf
		}
	}
}

[Thing Template=AAUnitRUSVehicleHeavyTankBase]
{
	IDS = rus_tank_heavy

	[ElementComponent]
	{
		required_structures = rus_brigade_engineer, rus_motor_pool
	}
}

[Thing Template=AAUnitRUSVehicleHeavyTankBase]
{
	IDS = rus_tank_heavy_tb

	[Placement]
	placement_group_ids = null

	[LairComponent]
	{
		reward = 20, 20	
	}

	[ElementComponent]
	{
		required_structures = rus_brigade_engineer_tb, rus_motor_pool_tb
	}
}